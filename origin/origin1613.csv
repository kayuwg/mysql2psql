id,original query
1,with recursive seq as ( select 1 as value union all select value+1 as value from seq where value < (select max(customer_id) from Customers)) select seq.value as ids from seq left join Customers as C on seq.value = C.customer_id where C.customer_id is null
2,WITH RECURSIVE id_table AS ( SELECT 1 id UNION ALL SELECT id + 1 FROM id_table WHERE Id < (SELECT MAX(customer_id) FROM Customers) ) SELECT id ids FROM id_table WHERE id NOT IN (SELECT customer_id FROM Customers) 
3,WITH RECURSIVE CTE (ids) AS ( SELECT 1 AS ids UNION ALL SELECT ids + 1 FROM CTE WHERE ids < (SELECT MAX(customer_id) FROM Customers) ) SELECT ids FROM CTE WHERE ids NOT IN (SELECT customer_id FROM Customers) ORDER BY 1 ASC
4,with RECURSIVE cte(n) AS ( SELECT 1 UNION ALL SELECT n+1 FROM cte WHERE n < 100 ) SELECT n AS ids FROM cte WHERE n NOT IN (SELECT customer_id FROM Customers) AND n < (SELECT MAX(customer_id) From Customers)
5,WITH RECURSIVE CTE AS ( SELECT 1 AS ids UNION ALL SELECT ids+1 AS ids FROM CTE WHERE ids < (SELECT MAX(customer_id) FROM Customers) ) SELECT ids FROM CTE WHERE ids NOT IN ( SELECT customer_id FROM Customers ) ORDER BY 1
6,with recursive t as ( select 1 as ids union all select ids+1 from t where ids < (select max(customer_id) from Customers ) ) select ids from t where ids not in (select customer_id from Customers) order by ids
7,with recursive itr as ( select 1 as ids union all select ids + 1 from itr where ids < (select max(customer_id) from customers) ) select ids from itr where ids not in ( select customer_id from customers) 
8,"WITH RECURSIVE seq AS ( SELECT 1 AS value UNION ALL SELECT value + 1 FROM seq WHERE value < (SELECT MAX(customer_id) FROM Customers) ) SELECT DISTINCT s.value AS ids FROM seq s, Customers c WHERE s.value not in (SELECT customer_id FROM Customers) ORDER BY 1 ASC "
9,with recursive all_ids as ( select 1 as id union all select id + 1 as id from all_ids where id < (select max(customer_id) as max_id from customers) ) select id as ids from all_ids where id not in (select customer_id from customers)
10,WITH RECURSIVE seq AS( SELECT 1 AS `value` UNION ALL SELECT `value` + 1 FROM seq WHERE `value` < 100 ) SELECT `value` AS ids FROM seq WHERE 1=1 AND `value` < (SELECT MAX(customer_id) FROM Customers) AND `value` NOT IN (SELECT customer_id FROM Customers)
11,WITH RECURSIVE cte AS( SELECT 1 AS ids FROM Customers UNION SELECT ids + 1 FROM cte WHERE ids < (SELECT MAX(customer_id) FROM Customers)) SELECT ids FROM cte WHERE ids NOT IN (SELECT customer_id FROM Customers)
12,with RECURSIVE temp as ( SELECT 1 as continued_id UNION SELECT continued_id + 1 FROM temp WHERE continued_id < (SELECT MAX(customer_id) FROM Customers) ) SELECT continued_id AS ids FROM temp WHERE continued_id NOT IN (SELECT customer_id FROM Customers)
13,WITH RECURSIVE id_seq AS ( SELECT 1 as continued_id UNION SELECT continued_id + 1 FROM id_seq WHERE continued_id < (SELECT MAX(customer_id) FROM Customers) ) SELECT continued_id AS ids FROM id_seq WHERE continued_id NOT IN (SELECT customer_id FROM Customers)
14,"select ids from (select b*10+a as ids from (select 0 a union all select 1 union all select 2 union all select 3 union all select 4 union all select 5 union all select 6 union all select 7 union all select 8 union all select 9) t1, (select 0 b union all select 1 union all select 2 union all select 3 union all select 4 union all select 5 union all select 6 union all select 7 union all select 8 union all select 9) t2 order by 1) as t where ids >= 1 and ids <= (select max(customer_id) from Customers) and ids not in (select customer_id from Customers) order by ids"
15,with recursive cte (id) as( select 1 as id union all select id+1 from cte where id<(select max(customer_id) from Customers)) select distinct id as ids from cte where id not in (select distinct customer_id from Customers)
16,WITH RECURSIVE tot(ids) AS ( SELECT 1 UNION SELECT ids+1 FROM tot WHERE ids < (SELECT MAX(customer_id) FROM customers) ) SELECT ids FROM tot LEFT JOIN Customers ON ids = customer_id WHERE customer_id IS NULL
17,"WITH RECURSIVE CTE AS( SELECT 1 AS 'id', MAX(c.customer_id) AS 'Max_Id' FROM Customers c UNION ALL SELECT id+1, Max_Id FROM CTE WHERE id < Max_id ) SELECT id AS 'ids' FROM CTE c WHERE c.id NOT IN (SELECT customer_id FROM Customers) ORDER BY 1 ASC"
18,with recursive cte(ids) as( select 1 union select ids+1 from cte where ids < (select max(customer_id)from customers) ) select ids from cte where ids not in ( select ids from cte join customers on cte.ids = customers.customer_id)
19,with recursive cte as ( select 1 as id union all select id+1 as id from cte where id < (select max(customer_id) from customers)) select id as ids from cte c left join customers cust on c.id=cust.customer_id where cust.customer_id is null 
20,with RECURSIVE cte(n) AS ( SELECT 1 UNION ALL SELECT n+1 FROM cte WHERE n < 100 ) SELECT n AS ids FROM cte WHERE n NOT IN (SELECT customer_id FROM Customers) AND n < (SELECT MAX(customer_id) From Customers)
21,with recursive id_seq as ( select 1 as ids union select ids+1 from id_seq where ids < (select max(customer_id) from customers) ) select ids from id_seq left join customers on ids=customer_id where customer_id is null
22,with recursive all_ids as ( select 1 as id union all select id + 1 as id from all_ids where id < (select max(customer_id) as max_id from customers) ) select id as ids from all_ids where id not in (select customer_id from customers)
23,with recursive id as ( select 1 as num union all select num + 1 from id where num < (select max(customer_id) from customers)) select num as ids from id where num not in (select customer_id from customers)
24,with recursive cte as ( select 1 as customer_id union all select customer_id + 1 as customer_id from cte where customer_id < (select max(customer_id) from Customers ) ) select customer_id as ids from cte where customer_id not in (select distinct customer_id from customers) order by 1
25,WITH RECURSIVE cte AS( SELECT 1 AS customer_id FROM Customers UNION ALL SELECT customer_id + 1 FROM cte WHERE customer_id < (SELECT MAX(customer_id) FROM Customers) ) SELECT DISTINCT cte.customer_id AS ids FROM cte LEFT JOIN Customers c USING(customer_id) WHERE c.customer_id IS NULL 
26,with recursive all_id as ( select 1 as ids union all select ids+1 from all_id where ids < (select max(customer_id) from Customers) ) select ids from all_id left join Customers on ids = customer_id where customer_id is null order by 1
27,with recursive cte(n) as (select 1 union all select n+1 from cte where n < (select max(customer_id) from customers)) select n as ids from cte where n not in (select customer_id from customers) order by n asc
28,WITH RECURSIVE seq AS (SELECT 1 AS value UNION ALL SELECT value + 1 FROM seq WHERE value < (SELECT MAX(customer_id) FROM Customers)) SELECT DISTINCT t1.value AS ids FROM seq as t1 LEFT JOIN Customers as t2 ON t1.value = t2.customer_id WHERE t2.customer_id IS NULL ORDER BY ids ASC 
29,with recursive ran_id as ((select 1 as id) union all (select id+1 from ran_id where id<(select max(customer_id) from Customers) ) ) select r.id as ids from ran_id r left join Customers c on c.customer_id = r.id where customer_name is null order by r.id 
30,WITH RECURSIVE all_ids AS ( SELECT 1 AS value UNION ALL SELECT value + 1 AS value FROM all_ids WHERE all_ids.value < ( SELECT MAX(customer_id) FROM Customers ) ) SELECT value AS ids FROM all_ids WHERE value NOT IN (SELECT customer_id FROM Customers) ORDER BY 1
31,with recursive cte (n) as ( select 1 union all select 1 + n from cte where n < (select max(customer_id) from Customers) ) select n as ids from cte where n not in (select customer_id from customers) order by ids asc
32,WITH RECURSIVE number as( select 1 as n union all select n+1 from number where n<(select max(customer_id) from customers) ) select n.n as ids from number n left join customers c on c.customer_id = n.n where c.customer_id is null
33,with recursive cte as ( select 1 as ids union all select ids + 1 from cte where ids < (select max(customer_id) from Customers) ) select ids from cte where cte.ids not in (select customer_id from customers) 
34,WITH RECURSIVE cte (ids) AS ( SELECT 1 UNION ALL SELECT ids + 1 FROM cte WHERE ids < (SELECT MAX(customer_id) FROM customers) ) SELECT c1.ids FROM cte AS c1 LEFT JOIN customers AS c2 ON c1.ids = c2.customer_id WHERE c2.customer_id IS NULL
35,WITH RECURSIVE id_table AS ( SELECT 1 AS id UNION ALL SELECT id + 1 FROM id_table WHERE Id < (SELECT MAX(customer_id ) FROM Customers) ) SELECT id AS ids FROM Customers c RIGHT JOIN id_table i ON c.customer_id = i.id WHERE customer_id IS NULL
36,"WITH RECURSIVE CTE AS( SELECT 1 AS 'id', MAX(c.customer_id) AS 'Max_Id' FROM Customers c UNION ALL SELECT id+1, Max_Id FROM CTE WHERE id < Max_id ) SELECT id AS 'ids' FROM CTE c WHERE c.id NOT IN (SELECT customer_id FROM Customers) ORDER BY 1 ASC"
37,WITH RECURSIVE CTE AS ( SELECT 1 as customer_id UNION SELECT 1 + customer_id FROM CTE WHERE customer_id <= 99 ) SELECT d1.customer_id as ids FROM CTE as d1 LEFT JOIN Customers as d2 ON d1.customer_id = d2.customer_id WHERE d1.customer_id <= (SELECT MAX(customer_id) FROM Customers) AND d2.customer_id IS NULL ORDER BY 1
38,with recursive cte (n) as ( select 1 UNION ALL select n + 1 from cte where n + 1 <= (select max(customer_id) from customers) ) select a.n as ids from cte a LEFT JOIN customers b On a.n = b.customer_id where b.customer_id is null
39,WITH RECURSIVE se AS (SELECT 1 AS ids UNION ALL SELECT ids+1 AS ids FROM se WHERE ids < (SELECT MAX(customer_id) FROM Customers)) SELECT ids FROM se WHERE ids NOT IN (SELECT customer_id FROM Customers) ORDER BY 1
40,with recursive tmp as (select 1 as seq_id union all select 1+seq_id as seq_id from tmp where seq_id<(select max(customer_id) from customers) ) select seq_id as ids from tmp a left join customers b on a.seq_id=b.customer_id where b.customer_id is null order by 1
41,"with recursive fullset (id) as ( select 1 union select id + 1 from fullset where id < (select max(customer_id) from Customers) ), idset as ( select customer_id as id from customers ) select id as ids from fullset where id not in (select * from idset)"
42,with recursive cte as ( select 1 as num union all select num+1 as num from cte where num<100 ) select cte.num as ids from cte left join customers c on cte.num = c.customer_id where c.customer_id is null and cte.num < (select max(customer_id) from customers) order by cte.num 
43,with recursive cte as (select 1 as ids union all select ids+1 from cte where ids < (select max(customer_id) from customers) ) select a.* from cte a left join customers b on a.ids = b.customer_id where b.customer_id is null order by 1
44,with recursive id as ( select 1 as continued_id union select continued_id + 1 from id where continued_id < (select max(customer_id) from customers) ) select continued_id as ids from id where continued_id not in (select customer_id from customers) 
45,with recursive CTE as ( Select 1 as num UNION ALL Select 1 + num from CTE where num < (Select max(customer_id) from Customers) ) Select cte.num as ids from CTE left join customers cu on cte.num = cu.customer_id where cu.customer_id is NULL
46,WITH RECURSIVE seq AS ( SELECT 1 AS value UNION ALL SELECT value + 1 FROM seq WHERE value < (select max(customer_id) from customers) ) SELECT value as ids FROM seq where value not in(select customer_id from customers) 
47,WITH RECURSIVE id_seq AS ( SELECT 1 as continued_id UNION SELECT continued_id + 1 FROM id_seq WHERE continued_id < (SELECT MAX(customer_id) FROM Customers) ) SELECT continued_id AS ids FROM id_seq WHERE continued_id NOT IN (SELECT customer_id FROM Customers) 
48,with recursive cte as ( select 1 as ids union all select ids+1 from cte where ids < (select max(customer_id) from customers)) select ids from cte where ids not in (select customer_id from customers)
49,with recursive cte (ids) as ( select 1 as ids union all select ids + 1 from cte where ids < (select max(customer_id) from Customers) ) select ids from cte where ids not in (select customer_id from Customers) order by ids
50,with recursive idtable as ( select 1 as n union all select n+1 from idtable where n < (select max(customer_id) from Customers) ) select idtable.n as ids from idtable left join Customers on idtable.n = Customers.customer_id where Customers.customer_id is null 
51,WITH RECURSIVE A as ( SELECT 1 as ids UNION SELECT ids + 1 FROM A WHERE ids < (SELECT max(customer_id) FROM Customers) ) SELECT ids FROM A WHERE ids NOT IN (SELECT customer_id FROM Customers) ORDER BY 1
52,WITH RECURSIVE seq AS ( SELECT 1 AS value UNION ALL SELECT value + 1 FROM seq WHERE value < (select max(customer_id) from customers) ) SELECT value as ids FROM seq where value not in (select customer_id from customers)
53,with recursive cte as (select 1 as ids union all select ids + 1 from cte where ids < (select max(customer_id) from Customers)) select ids from cte where ids not in (select customer_id from Customers) order by 1
54,With recursive id_seq As ( Select 1 as num Union All Select num + 1 From id_seq Where num < (Select max(customer_id) From Customers) ) Select num as ids From id_seq Where num not in (Select customer_id from Customers)
55,with recursive seq as (select 1 as value union all select value+1 from seq where value<(select max(customer_id) from Customers)) select value as ids from seq a left join Customers b on a.value=b.customer_id where b.customer_id is null
56,with recursive recursion as ( select 1 as id union all select id + 1 as id from recursion where id < (select max(customer_id) as maxid from Customers) ) select id as ids from recursion where id not in ( select customer_id from Customers) 
57,WITH recursive ids AS ( SELECT 1 as id_num UNION SELECT id_num + 1 FROM ids WHERE id_num < (SELECT MAX(customer_id) FROM Customers) ) SELECT id_num AS ids FROM ids WHERE id_num NOT IN (SELECT customer_id FROM Customers)
58,WITH RECURSIVE id_table AS ( SELECT 1 AS id UNION ALL SELECT id + 1 FROM id_table WHERE Id < (SELECT MAX(customer_id) FROM Customers) ) SELECT id AS ids FROM Customers c RIGHT JOIN id_table i ON c.customer_id = i.id WHERE customer_id IS NULL
59,with RECURSIVE tmp as ( select 1 AS n union all select n+1 from tmp where n < (SELECT MAX(customer_id) FROM Customers) ) SELECT t.n AS ids FROM tmp t LEFT JOIN Customers c ON t.n = c.customer_id WHERE c.customer_id IS NULL
60,WITH Recursive missing_num (ids ) AS ( Select 1 as ids from Customers UNION ALL Select ids +1 from missing_num where ids < (Select max(customer_id) from Customers) ) Select distinct ids from missing_num as MN left outer join Customers as C ON MN.ids = C.customer_id WHERE C.Customer_id is null
61,with recursive cte(cust_id) as ( select 1 union select cust_id+1 from cte where cust_id< (select max(customer_id) from customers)) select cust_id as ids from cte where cust_id not in (select distinct customer_id from customers)
62,with recursive cte(ids) as ( select 1 as ids union all select ids + 1 from cte where ids < (select max(customer_id) from customers) ) select ids from cte where ids not in(select customer_id from customers) order by ids
63,WITH recursive seq AS ( SELECT 1 AS value UNION ALL SELECT value+1 from seq WHERE value < (SELECT MAX(customer_id) FROM Customers) ) SELECT value as ids FROM seq WHERE value NOT IN (SELECT customer_id FROM Customers) 
64,WITH RECURSIVE CTE(ids) AS ( SELECT 1 AS ids UNION ALL SELECT 1+ids AS ids FROM CTE WHERE ids < (SELECT MAX(customer_id) FROM Customers) ) SELECT ids FROM CTE WHERE ids NOT IN (SELECT customer_id FROM Customers) ORDER BY ids ASC
65,with recursive all_id as ( select 1 as ids union all select ids+1 from all_id where ids < (select max(customer_id) from Customers) ) select ids from all_id left join Customers on ids = customer_id where customer_id is null order by 1
66,with recursive xid as ( select 1 as ids union all select ids+1 from xid where ids < (select max(customer_id) from Customers) ) select ids from xid t1 left join Customers t2 on t1.ids = t2.customer_id where t2.customer_id is null 
67,with recursive cte as ( select 1 as customer_id union all select customer_id + 1 as customer_id from cte where customer_id < (select max(customer_id) from Customers ) ) select t1.customer_id as ids from cte t1 left join Customers t2 on t1.customer_id = t2.customer_id where t2.customer_id IS NULL order by t1.customer_id
68,with recursive cte (customer_id) as (select 1 union select customer_id + 1 from cte where customer_id + 1 <= (select max(customer_id) from customers)) select customer_id as ids from cte where customer_id not in (select customer_id from customers)
69,with recursive temp0 as ( select 1 as ids union all select ids+1 as ids from temp0 where ids < (select max(customer_id) from Customers) ) select ids from temp0 where ids not in (select customer_id from Customers)
70,with recursive cte as ( select 1 as customer_id union all select customer_id + 1 as customer_id from cte where customer_id < (select max(customer_id) from Customers ) ) select customer_id as ids from cte where customer_id not in (select customer_id from customers) order by customer_id 
71,WITH RECURSIVE cte AS( SELECT 1 AS ids FROM Customers UNION SELECT ids + 1 FROM cte WHERE ids < (SELECT MAX(customer_id) FROM Customers)) SELECT ids FROM cte WHERE ids NOT IN (SELECT customer_id FROM Customers)
72,with recursive cte as ( select 1 as customer_id union all select customer_id + 1 as customer_id from cte where customer_id < (select max(customer_id) from Customers ) ) select t1.customer_id as ids from cte t1 left join Customers t2 on t1.customer_id = t2.customer_id where t2.customer_id IS NULL order by t1.customer_id
73,WITH RECURSIVE id_seq AS ( SELECT 1 AS continued_id UNION SELECT continued_id + 1 FROM id_seq WHERE continued_id < (SELECT MAX(customer_id) FROM Customers) ) SELECT i.continued_id ids FROM id_seq i LEFT JOIN Customers c ON i.continued_id = c.customer_id WHERE c.customer_name IS NULL
74,with recursive cte as( select 1 as ids union all select ids+1 from cte where ids <(select max(customer_id) from customers) ) select ids from cte where ids not in (select customer_id from customers) order by ids 
75,with recursive new as ( select 1 as ids union all select ids + 1 from new where ids < (select max(customer_id) from customers)) select ids from new where ids not in ( select customer_id from customers)
76,with recursive cte as ( select 1 as ids from Customers union select ids+1 from cte where ids < (select max(customer_id) from Customers) ) select * from cte where ids not in (Select customer_id from Customers) order by ids
77,With recursive nums(idx) as (Select 1 as idx Union all Select idx + 1 as idx From nums Where idx + 1 <= (Select max(customer_id) From Customers)) Select idx as ids From nums Where idx Not In (Select customer_id From customers)
78,with recursive cte as (select 1 as customer_id union all select customer_id + 1 as customer_id from cte where customer_id < (select max(customer_id) from Customers)) select cte.customer_id as ids from cte left join Customers c on cte.customer_id = c.customer_id where cte.customer_id not in (select distinct customer_id from Customers)
79,with recursive cte as ( select 1 as num UNION ALL select num + 1 from cte where num <= 100 ) select num as ids from cte left join Customers c on cte.num = c.customer_id where customer_id IS NULL having num <= (select max(customer_id) from Customers) 
80,WITH RECURSIVE seq AS (SELECT 1 AS value UNION SELECT value + 1 FROM seq WHERE value < (SELECT MAX(customer_id) FROM Customers)) SELECT DISTINCT tb1.value AS ids FROM seq as tb1 LEFT JOIN Customers as tb2 ON tb1.value = tb2.customer_id WHERE tb1.value NOT IN (SELECT customer_id FROM Customers) ORDER BY ids ASC 
81,with recursive r as( select 1 as 'ids' union all select ids+1 from r where ids < (select max(customer_id) from customers) ) select ids from r where ids not in (select customer_id from customers)
82,with recursive seq_id as ( select 1 id union select id + 1 from seq_id where id < (select max(customer_id) from Customers)) select id as ids from seq_id where id not in (select customer_id from Customers)
83,with RECURSIVE cte as (select 1 as customer_id UNION ALL select customer_id+1 from cte where customer_id < (select max(customer_id) from Customers)) select cte.customer_id as ids from cte LEFT JOIN customers c ON cte.customer_id = c.customer_id where c.customer_id is NULL order by 1
84,WITH recursive all_ids AS ( SELECT 1 AS id UNION ALL SELECT id + 1 AS id FROM all_ids WHERE id < (SELECT MAX(customer_id) AS max_id FROM Customers) ) SELECT id AS ids FROM all_ids WHERE id NOT IN (SELECT customer_id FROM Customers) 
85,WITH recursive id AS ( select 1 as num union all select num + 1 from id where num < (select max(customer_id) from Customers)) select num as ids from id where num not in (select customer_id from Customers) order by ids
86,with recursive cte as ( select 1 as customer_id union all select customer_id + 1 as customer_id from cte where customer_id < (select max(customer_id) from Customers ) ) select t1.customer_id as ids from cte t1 left join Customers t2 on t1.customer_id = t2.customer_id where t2.customer_id IS NULL order by t1.customer_id
87,WITH RECURSIVE CTE (ids) AS ( SELECT 1 AS ids UNION ALL SELECT ids + 1 FROM CTE WHERE ids < (SELECT MAX(customer_id) FROM Customers) ) SELECT ids FROM CTE WHERE ids NOT IN (SELECT customer_id FROM Customers) ORDER BY 1 ASC
88,with recursive cte as (select 1 as ids union all select ids+1 from cte where ids < (select max(customer_id) from customers)) select ids from cte where ids not in(select customer_id from customers) 
89,WITH RECURSIVE id_seq AS ( SELECT 1 as continued_id UNION SELECT continued_id + 1 FROM id_seq WHERE continued_id < (SELECT MAX(customer_id) FROM Customers) ) SELECT continued_id AS ids FROM id_seq WHERE continued_id NOT IN (SELECT customer_id FROM Customers)
90,with recursive cte as ( select 1 as id union all select id+1 as id from cte where id<(select max(customer_id) from Customers) ) select distinct id as ids from cte where id not in ( select customer_id from Customers ) 
91,with recursive cte1 (n) as ( select 1 union select n + 1 from cte1 where n < 100 ) select cte1.n as ids from cte1 left join customers c on cte1.n = c.customer_id where c.customer_name is null and cte1.n < ( select max(customer_id) from customers )
92,WITH RECURSIVE CTE (ids) AS ( SELECT 1 AS ids UNION ALL SELECT ids + 1 FROM CTE WHERE ids < (SELECT MAX(customer_id) FROM Customers) ) SELECT ids FROM CTE WHERE ids NOT IN (SELECT customer_id FROM Customers) ORDER BY 1 ASC
93,with recursive cte(ids) as (select 1 as ids union all select ids + 1 from cte where ids < (select max(customer_id) from Customers)) select ids from cte where ids not in (select customer_id from Customers) order by 1 
94,with recursive cte as (select 1 as ids union all select ids+1 from cte where ids < (select max(customer_id) from customers) ) select * from cte where ids not in (select customer_id from customers)
95,WITH RECURSIVE cte(n) AS ( SELECT 1 UNION ALL SELECT n+1 FROM cte WHERE n < 100 ) SELECT n AS ids FROM cte WHERE n NOT IN (SELECT customer_id FROM Customers) AND n < (SELECT MAX(customer_id) From Customers)
96,WITH RECURSIVE CTE AS( SELECT 1 AS ids FROM Customers UNION SELECT ids+1 AS ids FROM CTE WHERE ids<(SELECT MAX(customer_id) FROM Customers)) SELECT ids FROM CTE WHERE ids NOT IN (SELECT customer_id FROM Customers )
97,with recursive cte (ids) as ( select 1 as ids union all select ids + 1 from cte where ids < (select max(customer_id) from Customers) ) select ids from cte where ids not in (select customer_id from Customers) order by ids
98,WITH RECURSIVE cet AS (SELECT 1 AS id UNION SELECT id + 1 FROM cet WHERE id < (SELECT MAX(customer_id) FROM Customers)) SELECT id AS ids FROM cet WHERE id NOT IN (SELECT customer_id FROM Customers) 
99,WITH RECURSIVE tot(ids) AS ( SELECT 1 UNION SELECT ids+1 FROM tot WHERE ids < (SELECT MAX(customer_id) FROM customers) ) SELECT ids FROM tot LEFT JOIN Customers ON ids = customer_id WHERE customer_id IS NULL
100,with recursive tmp (id) as (select 1 union all select id + 1 from tmp where id < (select max(customer_id) from customers)) select id as ids from tmp where id not in (select customer_id from customers) order by ids
101,with RECURSIVE cte(n) AS ( SELECT 1 UNION ALL SELECT n+1 FROM cte WHERE n < (select max(customer_id) from customers) ) SELECT n AS ids FROM cte WHERE n NOT IN (SELECT customer_id FROM Customers) 
102,with recursive cte(ids) as (select 1 as ids union all select ids + 1 from cte where ids < (select max(customer_id) from Customers)) select ids from cte where ids not in (select customer_id from Customers) order by 1 
103,with recursive cte (customer_id) as (select 1 union select customer_id + 1 from cte where customer_id + 1 <= (select max(customer_id) from customers)) select customer_id as ids from cte where customer_id not in (select customer_id from customers)
104,with recursive t as( select 1 as id union all select id+1 from t where id < (select max(customer_id) from customers) ) select id as ids from t where id not in (select customer_id from customers)
105,WITH RECURSIVE id_seq AS ( SELECT 1 as continued_id UNION SELECT continued_id + 1 FROM id_seq WHERE continued_id < (SELECT MAX(customer_id) FROM Customers) ) SELECT continued_id AS ids FROM id_seq WHERE continued_id NOT IN (SELECT customer_id FROM Customers) 
106,with recursive all_id as ( select 1 as ids union all select ids+1 from all_id where ids < (select max(customer_id) from Customers) ) select ids from all_id left join Customers on ids = customer_id where customer_id is null order by ids
107,WITH RECURSIVE seq AS ( SELECT 1 AS value UNION ALL SELECT value + 1 FROM seq WHERE value < (select max(customer_id) from customers) ) SELECT value as ids FROM seq where value not in (select customer_id from customers) 
108,WITH RECURSIVE CTE AS ( SELECT customer_id FROM Customers UNION ALL SELECT customer_id -1 FROM CTE WHERE customer_id > 1 ) SELECT distinct CTE.customer_id AS ids FROM CTE LEFT JOIN Customers c using (customer_id) WHERE customer_name is null ORDER BY 1 
109,with recursive cte as ( select 1 as customer_id union all select customer_id + 1 from cte where customer_id < (select max(customer_id) from customers) ) select cte.customer_id as ids from cte left join customers c using(customer_id) where c.customer_id is null order by 1
110,with recursive consecutive_id as ( select 1 as counter union select counter + 1 from consecutive_id where counter < (select max(customer_id) from Customers) ) select counter as ids from consecutive_id left join customers on customer_id = counter where customer_id is null order by ids
111,with recursive id_seq as (select 1 as continued_id union select continued_id +1 from id_seq where continued_id < (select max(customer_id) from customers)) select continued_id as ids from id_seq where continued_id not in (select customer_id from customers) order by ids 
112,WITH RECURSIVE seq AS ( SELECT 1 AS value UNION ALL SELECT value + 1 FROM seq WHERE value < (SELECT MAX(customer_id) FROM Customers)) SELECT value AS ids FROM seq WHERE value NOT IN (SELECT customer_id FROM Customers)
113,with recursive cte as (select 1 as customer_id union select customer_id+1 from cte where customer_id < (select max(customer_id) from customers)) select customer_id as ids from cte left join customers using (customer_id) where customer_name is null
114,with recursive cte as (select 1 as ids union all select ids+1 from cte where ids < (select max(customer_id) from customers) ) select a.* from cte a left join customers b on a.ids = b.customer_id where b.customer_id is null order by 1
115,with recursive new as ( select 1 as ids union all select ids+1 from new where ids < (select max(customer_id) from customers)) select ids from new where ids not in ( select customer_id from customers)
116,with recursive cte as (select 1 as customer_id union all select (customer_id + 1) as customer_id from cte where customer_id + 1 <=(select max(customer_id) from Customers)) select sub.customer_id as ids from cte sub where sub.customer_id not in (select customer_id from Customers) 
117,with recursive seq_id as ( select 1 id union select id + 1 from seq_id where id < (select max(customer_id) from Customers)) select id as ids from seq_id where id not in (select customer_id from Customers)
118,WITH RECURSIVE seq AS (SELECT 1 AS continued_id UNION ALL SELECT continued_id + 1 FROM seq WHERE continued_id < (SELECT MAX(customer_id) FROM Customers)) SELECT DISTINCT t1.continued_id AS ids FROM seq AS t1 LEFT JOIN Customers AS t2 ON t1.continued_id = t2.customer_id WHERE t2.customer_id IS NULL ORDER BY continued_id ASC 
119,"WITH RECURSIVE cte (curr, maxval) AS ( SELECT 1, max(customer_id) as maxval from customers union all SELECT curr + 1, maxval from cte where curr < maxval ) SELECT curr as ids FROM cte where curr not in (select customer_id from customers)"
120,WITH recursive CTE as ( SELECT 1 as N UNION ALL SELECT N+1 FROM CTE WHERE N<(SELECT max(customer_id) from customers) ) SELECT N as ids FROM CTE WHERE N not in (SELECT customer_id FROM Customers) ORDER BY ids 
121,WITH RECURSIVE cte (id) AS ( SELECT 1 as id UNION ALL SELECT id+1 FROM cte WHERE id < (SELECT MAX(customer_id) FROM Customers) ) SELECT id AS ids FROM cte WHERE id NOT IN (SELECT customer_id FROM Customers) 
122,WITH RECURSIVE cte AS ( SELECT 1 as n UNION ALL SELECT n + 1 FROM cte WHERE n < (select max(customer_id) from customers) ) select n ids from cte where n not in (select customer_id from customers)
123,with recursive seq as ( select 1 as id union select id + 1 as id from seq where id < (select max(customer_id) from Customers) ) select b.id as ids from Customers a right join seq b on a.customer_id = b.id where a.customer_id is null
124,with RECURSIVE cte(n) AS ( SELECT 1 UNION ALL SELECT n+1 FROM cte WHERE n < 100 ) SELECT n AS ids FROM cte WHERE n NOT IN (SELECT customer_id FROM Customers) AND n < (SELECT MAX(customer_id) From Customers)
125,WITH recursive id AS ( select 1 as num union all select num + 1 from id where num < (select max(customer_id) from Customers)) select num as ids from id where num not in (select customer_id from Customers) order by ids
126,WITH RECURSIVE cte AS ( SELECT 1 AS ids UNION ALL SELECT ids + 1 FROM cte WHERE ids < (SELECT MAX(customer_id) FROM Customers) ) SELECT * FROM cte WHERE ids NOT IN (SELECT customer_id FROM Customers)
127,with recursive t as ( select 1 ids union all select ids+1 num from t where ids<(select max(customer_id) from customers order by customer_id)) select t.ids from customers c right join t on c.customer_id = t.ids where c.customer_id is null 
128,WITH RECURSIVE A AS( SELECT 1 AS value UNION ALL SELECT value+1 FROM A WHERE value < (SELECT max(customer_id) FROM Customers) ) SELECT value as ids FROM A WHERE value not in (select customer_id FROM Customers)
129,WITH recursive numbers AS ( select 1 as ids union all select ids + 1 from numbers where ids < 100) select n.ids from numbers n WHERE n.ids NOT IN (SELECT customer_id FROM Customers) AND n.ids <= (SELECT MAX(customer_id) FROM Customers) 
130,with recursive cte as ( select 1 as customer_id union all select customer_id +1 from cte where customer_id < (select max(customer_id) from customers) ) select customer_id as ids from cte where customer_id not in (select customer_id from customers)
131,with RECURSIVE cte(n) AS ( SELECT 1 UNION ALL SELECT n+1 FROM cte WHERE n < 100 ) SELECT n AS ids FROM cte WHERE n NOT IN (SELECT customer_id FROM Customers) AND n < (SELECT MAX(customer_id) From Customers)
132,with recursive Numbers as ( select 1 as Number union all select Number + 1 from Numbers where Number < (select max(customer_id) from customers) ) select Number as ids from Numbers where Number not in (select customer_id from customers) 
133,WITH RECURSIVE seq AS ( SELECT 1 AS value UNION ALL SELECT value + 1 FROM seq WHERE value < (select max(customer_id) from customers) ) SELECT value 'ids' FROM seq where value not in (select customer_id from customers)
134,with recursive new as ( select 1 as ids union all select ids+1 from new where ids < (select max(customer_id) from customers)) select ids from new where ids not in ( select customer_id from customers)
135,WITH RECURSIVE id_seq AS ( SELECT 1 as continued_id UNION SELECT continued_id + 1 FROM id_seq WHERE continued_id < (SELECT MAX(customer_id) FROM Customers) ) SELECT continued_id AS ids FROM id_seq WHERE continued_id NOT IN (SELECT customer_id FROM Customers)
136,with recursive seq as ( select 1 as val union all select val + 1 as val from seq where val<=100 ) select val as ids from seq where val not in (select customer_id from Customers) and val<(select max(customer_id) from Customers)
137,WITH RECURSIVE cte AS (SELECT 1 AS id UNION ALL SELECT id+1 FROM cte WHERE id < (SELECT max(customer_id) FROM Customers) ) SELECT id AS ids FROM cte WHERE id NOT IN (SELECT customer_id FROM Customers) 
138,with recursive cte as ( select 1 as customer_id union all select customer_id + 1 as customer_id from cte where customer_id < (select max(customer_id) from Customers ) ) select t1.customer_id as ids from cte t1 left join Customers t2 on t1.customer_id = t2.customer_id where t2.customer_id IS NULL order by t1.customer_id
139,with recursive cte as (select 1 as counter union all select counter+1 from cte where counter<(select max(customer_id) from Customers)) select counter as ids from cte where counter not in (select customer_id from Customers) 
140,WITH RECURSIVE cte(n) AS( SELECT 1 AS ids UNION ALL SELECT n+1 AS ids FROM cte WHERE n < (SELECT MAX(customer_id) AS max_id FROM Customers) ) SELECT n AS ids FROM cte WHERE n NOT IN (SELECT customer_id FROM Customers)
141,with recursive cte as (select 1 as value union all select value+1 from cte where value<100) select value as ids from cte where value not in (select customer_id from customers) and value<=(select max(customer_id) from customers)
142,WITH RECURSIVE cte AS ( SELECT 1 AS customer_id UNION SELECT customer_id + 1 FROM cte WHERE customer_id < ( SELECT MAX(customer_id) FROM Customers ) ) SELECT customer_id ids FROM cte WHERE customer_id NOT IN( SELECT customer_id FROM Customers )
143,WITH RECURSIVE seq AS (SELECT 1 AS value UNION ALL SELECT value + 1 FROM seq WHERE value < (select max(customer_id) from customers)) select distinct(value) as ids from seq where value not in (select customer_id from customers) order by ids
144,with recursive all_id as ( select 1 as ids union all select ids+1 from all_id where ids < (select max(customer_id) from Customers) ) select ids from all_id where ids not in (select customer_id from customers) order by ids
145,WITH recursive T1 AS ( SELECT 1 AS id UNION ALL SELECT id+1 AS ids FROM T1 WHERE id < (SELECT MAX(customer_id) FROM customers)) SELECT id AS ids FROM T1 WHERE id NOT IN (SELECT customer_id FROM customers)
146,WITH RECURSIVE cte AS ( select 1 as number union select number + 1 from cte where number < (select max(customer_id) from Customers)) SELECT number AS ids FROM cte WHERE number NOT IN (SELECT customer_id FROM Customers) 
147,WITH RECURSIVE id_seq AS ( SELECT 1 as continued_id UNION SELECT continued_id + 1 FROM id_seq WHERE continued_id < (SELECT MAX(customer_id) FROM Customers) ) SELECT continued_id AS ids FROM id_seq WHERE continued_id NOT IN (SELECT customer_id FROM Customers)
148,with recursive cte as ( select 1 as customer_id union all select customer_id + 1 from cte where customer_id < (select max(customer_id) from Customers) ) select customer_id as ids from cte where customer_id not in (select customer_id from Customers)
149,with recursive cte as ( select 1 as customer_id union all select customer_id + 1 as customer_id from cte where customer_id < (select max(customer_id) from Customers ) ) select t1.customer_id as ids from cte t1 left join Customers t2 on t1.customer_id = t2.customer_id where t2.customer_id IS NULL order by t1.customer_id
150,WITH RECURSIVE t AS ( SELECT 1 as num UNION SELECT num + 1 FROM t WHERE num < (SELECT MAX(customer_id) FROM Customers) ) SELECT num AS ids FROM t WHERE num NOT IN (SELECT customer_id FROM Customers) 
151,WITH RECURSIVE t1 AS ( SELECT 1 AS customer_id UNION ALL SELECT customer_id +1 FROM t1 WHERE customer_id < (SELECT MAX(customer_id) FROM Customers) ) SELECT customer_id ids FROM t1 WHERE t1.customer_id NOT IN (SELECT DISTINCT customer_id FROM Customers) 
152,with recursive all_ids as ( select 1 as id union all select id + 1 as id from all_ids where id < (select max(customer_id) as max_id from customers) ) select id as ids from all_ids where id not in (select customer_id from customers) 
153,"WITH RECURSIVE seq AS ( SELECT 1 AS value UNION ALL SELECT value + 1 FROM seq WHERE value < (SELECT MAX(customer_id) FROM Customers)) SELECT DISTINCT s.value AS ids FROM seq s, Customers c WHERE s.value not in (SELECT customer_id FROM Customers) ORDER BY 1 ASC "
154,with recursive Numbers as ( select 1 as Number union all select Number + 1 from Numbers where Number < (select max(customer_id) from Customers) ) select Number as ids from Numbers where Number not in (select distinct customer_id from Customers)
155,WITH RECURSIVE cte AS ( SELECT 1 AS ids UNION ALL SELECT ids+1 FROM cte WHERE ids < (SELECT MAX(customer_id) FROM Customers) ) SELECT ids FROM cte WHERE ids NOT IN ( SELECT customer_id FROM Customers )
156,with recursive cte as( select 1 as row_id union all select row_id + 1 as row_id from cte where row_id < (select max(customer_id) from Customers) ) select row_id as ids from cte where row_id not in (select distinct customer_id from Customers) order by 1 asc
157,WITH RECURSIVE CTE AS ( SELECT 1 AS id UNION ALL SELECT id + 1 FROM CTE WHERE id < (SELECT MAX(customer_id) FROM Customers) ) SELECT CTE.id AS ids FROM CTE LEFT JOIN Customers c ON CTE.id = c.customer_id WHERE c.customer_id IS NULL
158,"with recursive max_id as( select max(customer_id) as max_id from Customers ), all_ids as ( select 1 as all_ids union select all_ids+1 as all_ids from all_ids,max_id where all_ids<max_id ) select all_ids as ids from all_ids as a left join Customers as b on a.all_ids = b.customer_id where b.customer_id is null "
159,WITH RECURSIVE cte(n) AS (SELECT 1 UNION ALL SELECT n + 1 FROM cte WHERE n < (SELECT MAX(customer_id) FROM Customers) ) SELECT n AS ids FROM cte WHERE n NOT IN (SELECT customer_id FROM Customers)
160,WITH RECURSIVE AllIds AS (SELECT MAX(customer_id) AS ids FROM Customers UNION ALL SELECT ids - 1 AS ids FROM AllIds WHERE ids > 1) SELECT ids FROM AllIds WHERE ids NOT IN (SELECT customer_id FROM Customers) ORDER BY 1 ASC
161,with recursive seq as( select 1 as contseq union select contseq+1 from seq where contseq< (select max(customer_id) from Customers) ) select contseq as ids from seq where contseq not in (Select Customer_id from Customers) 
162,with recursive new as ( select 1 as ids union all select ids + 1 from new where ids < (select max(customer_id) from customers)) select ids from new where ids not in ( select customer_id from customers)
163,with RECURSIVE CTE (n) as ( select 1 union all select n+1 from cte where n <100 ) select n as ids from cte where n < (select max(customer_id) from Customers) and n not in (select customer_id from Customers) 
164,with recursive cte as ( select 1 as customer_id union all select customer_id + 1 as customer_id from cte where customer_id < (select max(customer_id) from Customers ) ) select t1.customer_id as ids from cte t1 left join Customers t2 on t1.customer_id = t2.customer_id where t2.customer_id IS NULL order by t1.customer_id
165,with recursive cte as ( select 1 as customer_id union all select customer_id+1 as customer_id from cte where customer_id<(select max(customer_id) from customers)) select t1.customer_id as ids from cte t1 left join Customers t2 on t1.customer_id = t2.customer_id where t2.customer_id IS NULL order by t1.customer_id 
166,WITH RECURSIVE id_table AS ( SELECT 1 AS id UNION ALL SELECT id + 1 FROM id_table WHERE Id < (SELECT MAX(customer_id) FROM Customers) ) SELECT id AS ids FROM Customers c RIGHT JOIN id_table i ON c.customer_id = i.id WHERE customer_id IS NULL
167,WITH RECURSIVE seq AS (SELECT 1 AS value UNION ALL SELECT value + 1 FROM seq WHERE value < (select max(customer_id) from customers)) select value as ids from seq where value not in(select customer_id from customers)
168,WITH RECURSIVE CTE AS ( SELECT 1 AS id UNION ALL SELECT 1+id FROM CTE WHERE id<(SELECT MAX(customer_id) FROM Customers) ) SELECT id AS ids FROM CTE WHERE id NOT IN (SELECT customer_id FROM Customers)
169,with recursive allid as ( select 1 as id union all select id+1 as id from allid where id< (select max(customer_id) from customers) ) select id as ids from allid where id not in (select customer_id from customers)
170,with recursive seq_generator(ids) as (select 1 union all select ids+1 from seq_generator where ids< (select max(customer_id) from customers)) select a.ids from seq_generator a where ids not in (select customer_id from customers)
171,with recursive seq_id as ( select 1 id union select id + 1 from seq_id where id < (select max(customer_id) from Customers)) select id as ids from seq_id where id not in (select customer_id from Customers)
172,WITH RECURSIVE ID_LIST AS( SELECT 1 AS ID UNION SELECT ID+1 FROM ID_LIST where ID+1<=(SELECT MAX(CUSTOMER_ID) FROM CUSTOMERS) ) SELECT ID AS ids FROM ID_LIST WHERE ID NOT IN (SELECT CUSTOMER_ID FROM CUSTOMERS)
173,WITH RECURSIVE cte AS ( SELECT 1 AS n UNION ALL SELECT n + 1 FROM cte WHERE n < (SELECT MAX(customer_id) FROM Customers) ) SELECT n AS ids FROM cte WHERE n NOT IN (SELECT customer_id FROM Customers)
174,with recursive a as ( select 1 as ids union all select ids+1 from a limit 100) select * from a where ids not in (select customer_id from Customers) and ids < (select max(customer_id) from Customers)
175,With RECURSIVE RC AS ( Select 1 as ct UNION Select ct+1 FROM RC where ct<(Select Max(customer_id) from Customers) ) Select ct as ids from RC where ct NOT IN (Select customer_id FROM Customers)
176,with recursive temp1 as( select 1 as id union all select id+1 as id from temp1 where id < (select max(customer_id) from customers) ) select id as ids from temp1 left join customers c on temp1.id = c.customer_id where c.customer_name is null
177,with recursive cte as ( select 1 as ids union all select ids + 1 from cte where ids < (select max(customer_id) from Customers) ) select ids from cte where ids not in (select customer_id from Customers) order by ids
178,"WITH RECURSIVE seq AS ( SELECT 1 AS value UNION ALL SELECT value + 1 FROM seq WHERE value < (SELECT MAX(customer_id) FROM Customers)) SELECT DISTINCT s.value AS ids FROM seq s, Customers c WHERE s.value not in (SELECT customer_id FROM Customers) ORDER BY 1 ASC"
179,with recursive ids as( select 1 as ids union select ids+1 from ids where ids < (select max(customer_id) from customers) ) select ids from ids where ids not in (select customer_id from customers)
180,WITH RECURSIVE cte AS (SELECT 1 AS n UNION ALL SELECT n +1 FROM cte WHERE n<100) SELECT n AS ids FROM cte WHERE n NOT IN (SELECT CUSTOMER_ID FROM Customers) AND n < (SELECT MAX(customer_id) FROM Customers)
181,SELECT val AS 'ids' FROM (SELECT * FROM (WITH RECURSIVE cte (val) AS (SELECT 1 FROM DUAL UNION ALL SELECT val+1 FROM cte WHERE val <100) SELECT * FROM cte) hundred WHERE val <= (SELECT MAX(customer_id) FROM Customers)) test WHERE val NOT IN (SELECT customer_id FROM Customers)
182,with recursive cte as( select 1 as customer_id union all select customer_id +1 as customer_id from cte where customer_id < (select max(customer_id) from customers) ) select customer_id as ids from cte where customer_id not in (select customer_id from customers) order by 1
183,with recursive new as ( select 1 as ids union all select ids + 1 ids from new where ids < (select max(customer_id ) from Customers) ) select ids from new t1 where not exists (select customer_id from Customers t2 where t2.customer_id = t1.ids)
184,WITH RECURSIVE seq AS ( SELECT 1 AS value UNION ALL SELECT value + 1 FROM seq WHERE value < (SELECT MAX(customer_id) FROM Customers)) SELECT s.value AS ids FROM seq s left join Customers c on c.customer_id= s.value WHERE c.customer_name is null
185,with recursive cte as (select 1 as id union all select id + 1 as id from cte where id <= (select max(customer_id)-1 from Customers) ) select distinct cte.id as ids from cte left join Customers on cte.id = Customers.customer_id where Customers.customer_id is null order by 1
186,WITH RECURSIVE id_seq AS ( SELECT 1 as continued_id UNION SELECT continued_id + 1 FROM id_seq WHERE continued_id < (SELECT MAX(customer_id) FROM Customers) ) SELECT continued_id AS ids FROM id_seq WHERE continued_id NOT IN (SELECT customer_id FROM Customers)
187,with recursive cte as (select 1 as value union all select value+1 from cte where value <100) select value as ids from cte where value not in (select customer_id from Customers) and value < (select max(customer_id) from Customers)
188,with recursive id_list as ( select 1 as number union select number + 1 from id_list where number < (select max(customer_id) from Customers) ) select number as ids from id_list where number not in (select customer_id from Customers)
189,with recursive a as (SELECT 1 as val UNION ALL SELECT val+1 FROM a WHERE val < (select max(customer_id) from Customers)) select a.val as ids from a WHERE a.val not in (select customer_id from Customers) and a.val <=100 ORDER BY ids 
190,with recursive cte (customer_id) as (select 1 union select customer_id + 1 from cte where customer_id + 1 <= (select max(customer_id) from customers)) select customer_id as ids from cte where customer_id not in (select customer_id from customers)
191,WITH RECURSIVE CTE AS ( SELECT 1 as customer_id UNION ALL SELECT 1 + customer_id FROM CTE WHERE customer_id < (SELECT MAX(customer_id) FROM Customers) ) SELECT d1.customer_id as ids FROM CTE as d1 LEFT JOIN Customers as d2 ON d1.customer_id = d2.customer_id WHERE d2.customer_id IS NULL ORDER BY 1
192,WITH RECURSIVE a1 as (Select 1 as id UNION ALL Select id+1 from a1 where id<(Select max(customer_id) from customers) ) Select id as ids from a1 where id not in (Select customer_id from customers)
193,WITH RECURSIVE tmp_cte AS( SELECT 1 AS ids UNION ALL SELECT ids + 1 AS ids FROM tmp_cte WHERE ids < (SELECT MAX(customer_id) FROM Customers) ) SELECT ids FROM tmp_cte LEFT OUTER JOIN Customers ON ids = customer_id WHERE customer_id IS NULL
194,with recursive cte as ( select 1 as customer_id union all select customer_id + 1 as customer_id from cte where customer_id < (select max(customer_id) from Customers ) ) select t1.customer_id as ids from cte t1 left join Customers t2 on t1.customer_id = t2.customer_id where t2.customer_id IS NULL order by t1.customer_id 
195,with recursive cte(id) as ( select 1 union all select id +1 from cte where id +1 <= (select max(customer_id) from customers) ) select a.id as ids from cte as a left join customers as b on a.id = b.customer_id where customer_name is null 
196,with recursive cte as ( select 1 as customer_id union all select customer_id + 1 as customer_id from cte where customer_id < (select max(customer_id) from Customers ) ) select t1.customer_id as ids from cte t1 left join Customers t2 on t1.customer_id = t2.customer_id where t2.customer_id IS NULL order by t1.customer_id 
197,WITH RECURSIVE id_seq AS ( SELECT 1 as continued_id UNION SELECT continued_id + 1 FROM id_seq WHERE continued_id < (SELECT MAX(customer_id) FROM Customers) ) SELECT continued_id AS ids FROM id_seq WHERE continued_id NOT IN (SELECT customer_id FROM Customers)
198,with recursive t as (select 1 as ids UNION ALL select ids + 1 from t where ids < (select max(customer_id) from Customers)) select ids from t where ids not in (select customer_id from Customers) 
199,"WITH RECURSIVE max_id AS( SELECT MAX(customer_id) FROM customers ), one_to_n(n) AS( SELECT 1 UNION ALL SELECT n + 1 FROM one_to_n where N < (SELECT * FROM max_id) ) SELECT o.n AS ids FROM one_to_n o LEFT JOIN customers c on o.n = c.customer_id WHERE c.customer_id IS NULL"
200,WITH RECURSIVE id_seq AS ( SELECT 1 AS continued_id UNION SELECT continued_id + 1 FROM id_seq WHERE continued_id < (SELECT MAX(customer_id) FROM Customers) ) SELECT continued_id AS ids FROM id_seq WHERE continued_id NOT IN (SELECT customer_id FROM Customers) 
201,WITH RECURSIVE seq AS ( SELECT 1 AS id UNION ALL SELECT id + 1 FROM seq WHERE id < (select max(customer_id) from customers) ) select seq.id as ids from seq LEFT JOIN customers c ON seq.id = c.customer_id where c.customer_id is null
202,WITH RECURSIVE id_seq AS ( SELECT 1 as continued_id UNION SELECT continued_id + 1 FROM id_seq WHERE continued_id < (SELECT MAX(customer_id) FROM Customers) ) SELECT continued_id AS ids FROM id_seq WHERE continued_id NOT IN (SELECT customer_id FROM Customers)
203,With Recursive New as ( select 1 as id UNION ALL select id+1 as id from New where id < (select max(customer_id) from Customers) ) select id as ids from New where id not in (select customer_id from Customers)
204,WITH RECURSIVE id_seq AS ( SELECT 1 as continued_id UNION SELECT continued_id + 1 FROM id_seq WHERE continued_id < (SELECT MAX(customer_id) FROM Customers) ) SELECT continued_id AS ids FROM id_seq WHERE continued_id NOT IN (SELECT customer_id FROM Customers)
205,WITH recursive id AS ( select 1 as num union all select num + 1 from id where num < (select max(customer_id) from Customers)) select num as ids from id where num not in (select customer_id from Customers) order by ids
206,WITH recursive id AS ( select 1 as num union all select num + 1 from id where num < (select max(customer_id) from Customers)) select num as ids from id where num not in (select customer_id from Customers) order by ids
207,with recursive all_ids as (select 1 as id union all select id + 1 as id from all_ids where id < (select max(customer_id) as max_id from customers) ) select id as ids from all_ids where id not in (select customer_id from customers)
208,WITH RECURSIVE id_table AS ( SELECT 1 AS id UNION ALL SELECT id + 1 FROM id_table WHERE Id < (SELECT MAX(customer_id) FROM Customers) ) SELECT id AS ids FROM Customers c RIGHT JOIN id_table i ON c.customer_id = i.id WHERE customer_id IS NULL
209,WITH RECURSIVE CTE (ids) AS ( SELECT 1 AS ids UNION ALL SELECT ids + 1 FROM CTE WHERE ids < (SELECT MAX(customer_id) FROM Customers) ) SELECT ids FROM CTE WHERE ids NOT IN (SELECT customer_id FROM Customers) ORDER BY 1 ASC
210,with recursive cte1 as (select 1 as ids union all select ids+1 from cte1 where ids< (select max(customer_id) from customers)) select ids from cte1 where ids not in (select customer_id from customers)
211,"WITH digits AS ( SELECT 0 as d UNION ALL SELECT 1 as d UNION ALL SELECT 2 as d UNION ALL SELECT 3 as d UNION ALL SELECT 4 as d UNION ALL SELECT 5 as d UNION ALL SELECT 6 as d UNION ALL SELECT 7 as d UNION ALL SELECT 8 as d UNION ALL SELECT 9 as d), numbers AS ( SELECT a.d + b.d * 10 as num FROM digits as a CROSS JOIN digits as b GROUP BY num) SELECT n.num as ids FROM numbers as n LEFT JOIN customers as c ON c.customer_id = n.num WHERE c.customer_id IS NULL AND n.num > 0 AND n.num < (SELECT MAX(customer_id) FROM customers) ORDER BY n.num"
212,with recursive allids AS ( SELECT 1 AS customer_id UNION ALL SELECT customer_id + 1 FROM allids WHERE customer_id < (SELECT MAX(customer_id) FROM Customers) ) SELECT a.customer_id as ids FROM allids a LEFT JOIN Customers b ON a.customer_id = b.customer_id WHERE b.customer_id is NULL 
213,with recursive sq as ( select 1 as start_id union all select start_id+1 from sq where start_id<(select max(customer_id) from Customers) ) select start_id as ids from sq where (start_id) not in (select customer_id from Customers)
214,with recursive t as( select 1 as id union all select id+1 from t where id < (select max(customer_id) from customers) ) select id as ids from t where id not in (select customer_id from customers)
215,with recursive cte as ( select 1 as value union all select value+1 from cte where value < (select max(customer_id)from customers) ) select value as ids from cte where value not in (select customer_id from customers)
216,WITH RECURSIVE seq AS ( SELECT 1 AS val UNION ALL SELECT val + 1 FROM seq WHERE val < (select max(customer_id) from customers) ) SELECT val as ids FROM seq WHERE val NOT IN ( SELECT customer_id FROM Customers) 
217,with recursive cte as ( select 1 as ids union all select ids+1 from cte where ids < (select max(customer_id) from Customers)) select * from cte where ids not in (select customer_id from Customers) 
218,with recursive lst as ( select 1 as id union select id+1 from lst where id <(select max(customer_id) from customers) ) select distinct a.id as ids from lst as a where id not in (select customer_id from customers) 
219,WITH RECURSIVE Seq AS ( SELECT 1 AS ids UNION SELECT ids + 1 FROM Seq WHERE ids < ( SELECT MAX(customer_id) FROM Customers) ) SELECT ids FROM Seq WHERE ids NOT IN ( SELECT customer_id FROM Customers)
220,with recursive seq as (select 1 as con_id union select con_id + 1 from seq where con_id < (select max(customer_id) from Customers) ) select con_id as ids from seq where con_id not in (select customer_id from Customers) 
221,with recursive All_Id as ( select 1 as id union select id + 1 as id from All_Id where id < (select max(customer_id) from Customers) ) select All_Id.id as ids from All_id left join Customers on All_Id.id = Customers.customer_id where Customers.customer_id is Null
222,with recursive t1 as(select 1 as value union all select value + 1 from t1 where value < (select max(customer_id) from customers) ) select distinct(value) as ids from t1 where value not in (select customer_id from customers) order by value
223,with recursive seq_id as ( select 1 id union select id + 1 from seq_id where id < (select max(customer_id) from Customers)) select id 'ids' from seq_id where id not in (select customer_id from Customers) 
224,with recursive cte as ( select 1 as customer_id union all select customer_id + 1 from cte where customer_id < (select max(customer_id) from customers) ) select cte.customer_id as ids from cte left join customers c using(customer_id) where c.customer_id is null order by 1
225,with recursive cte as ( select 1 as num union select num+1 as num from cte where num<100) select num as ids from cte where not exists (select 1 from customers where customer_id=num) and num<=(select max(customer_id) from customers) order by ids
226,with recursive cte (ids) as ( select 1 as ids union all select ids + 1 from cte where ids < (select max(customer_id) from Customers) ) select ids from cte where ids not in (select customer_id from Customers) order by ids
227,with recursive cte as ( select 1 as ids union all select ids+1 from cte where ids < (select max(customer_id) from customers) ) select ids from cte c left join customers m on c.ids = m.customer_id where m.customer_id is null 
228,WITH RECURSIVE cte AS (SELECT 1 AS customer_id UNION ALL SELECT customer_id + 1 AS customer_id FROM cte WHERE customer_id < (SELECT max(customer_id) FROM Customers)) SELECT customer_id AS ids FROM cte WHERE customer_id NOT IN (SELECT customer_id FROM Customers) ORDER BY 1
229,WITH RECURSIVE CTE (ids) AS ( SELECT 1 AS ids UNION ALL SELECT ids + 1 FROM CTE WHERE ids < (SELECT MAX(customer_id) FROM Customers) ) SELECT ids FROM CTE WHERE ids NOT IN (SELECT customer_id FROM Customers) ORDER BY 1 ASC
230,"WITH RECURSIVE seq AS ( SELECT 1 AS value UNION ALL SELECT value + 1 FROM seq WHERE value < (SELECT MAX(customer_id) FROM Customers)) SELECT DISTINCT s.value AS ids FROM seq s, Customers c WHERE s.value not in (SELECT customer_id FROM Customers) ORDER BY 1 ASC"
231,with recursive id as ( select 1 as num union all select num + 1 from id where num < (select max(customer_id) from customers)) select num as ids from id where num not in (select customer_id from customers) 
232,WITH RECURSIVE tb2 (ids) AS ( SELECT 1 ids union all SELECT ids+1 from tb2 where ids < (SELECT MAX(customer_id) FROM Customers) ) SELECT * FROM tb2 WHERE ids NOT IN (SELECT customer_id FROM Customers) ORDER BY ids
233,WITH RECURSIVE CTE (ids) AS ( SELECT 1 AS ids UNION ALL SELECT ids + 1 FROM CTE WHERE ids < (SELECT MAX(customer_id) FROM Customers) ) SELECT ids FROM CTE WHERE ids NOT IN (SELECT customer_id FROM Customers) ORDER BY 1 ASC
234,WITH RECURSIVE cte AS ( SELECT 1 as n UNION ALL SELECT n+1 FROM cte WHERE n<(SELECT MAX(customer_id) FROM Customers)) SELECT n AS ids FROM cte WHERE n NOT IN (SELECT customer_id FROM Customers)
235,with recursive ids as ( select 1 as customer_id union all select customer_id+1 as customer_id from ids where customer_id+1 <= (select max(customer_id) from customers) ) select i.customer_id as ids from ids i left join customers c on i.customer_id = c.customer_id where c.customer_id is null order by 1
236,with recursive cte (customer_id) as (select 1 union select customer_id + 1 from cte where customer_id + 1 <= (select max(customer_id) from customers)) select customer_id as ids from cte where customer_id not in (select customer_id from customers)
237,WITH RECURSIVE seq (n) AS ( SELECT 1 UNION ALL SELECT n + 1 FROM seq WHERE n + 1 <= (SELECT MAX(Customer_id) FROM Customers) ) SELECT n AS ids FROM seq WHERE n NOT IN (SELECT DISTINCT customer_id FROM Customers)
238,WITH RECURSIVE id_seq AS ( SELECT 1 as continued_id UNION SELECT continued_id + 1 FROM id_seq WHERE continued_id < (SELECT MAX(customer_id) FROM Customers) ) SELECT continued_id AS ids FROM id_seq WHERE continued_id NOT IN (SELECT customer_id FROM Customers) 
239,WITH RECURSIVE id_seq AS ( SELECT 1 as continued_id UNION SELECT continued_id + 1 FROM id_seq WHERE continued_id < (SELECT MAX(customer_id) FROM Customers) ) SELECT continued_id AS ids FROM id_seq WHERE continued_id NOT IN (SELECT customer_id FROM Customers) 
240,WITH RECURSIVE seq AS ( SELECT 1 AS value UNION ALL SELECT value + 1 FROM seq WHERE value < (select max(customer_id) from customers) ) select value as ids from seq left join customers b on seq.value=b.customer_id where b.customer_id is null
241,with RECURSIVE indx(id) as ( select 1 union all select id + 1 from indx where id < (select max(customer_id) from customers) ) select id as ids from indx where id not in (select customer_id from customers)
242,WITH RECURSIVE seq AS ( SELECT 1 AS value UNION ALL SELECT value + 1 FROM seq WHERE value < (select max(customer_id) from customers) ) select value ids from seq where value not in (select customer_id from customers) order by 1 asc
243,with recursive cte as(select 1 as ids union select ids+1 from cte where ids<(select max(customer_id) from customers)) select ids from cte where ids not in (select customer_id from customers) order by ids
244,with recursive cte as (select 1 as customer_id union all select customer_id+1 from cte where customer_id < (select max(customer_id) from customers)) select cte.customer_id ids from cte left join customers c on cte.customer_id = c.customer_id where c.customer_id is null order by 1 asc
245,with recursive cte as ( select 1 as ids union all select ids+1 as ids from cte where ids < (select max(customer_id) from Customers)) select ids from cte c where not exists (select customer_id from Customers c1 where c1.customer_id=c.ids)
246,with recursive id as ( select 1 as ids union all select ids + 1 as ids from id where ids < (select max(customer_id) from Customers)) select ids from id where ids not in (select customer_id from Customers)
247,with recursive r_cte as (select 1 as customer_id union select customer_id+1 from r_cte where customer_id <= 100) select r.customer_id as ids from r_cte r left join Customers c on r.customer_id = c.customer_id WHERE c.customer_id is Null and r.customer_id <= (select max(customer_id) from Customers) 
248,with recursive nums as( select 1 as num_id union all select num_id+1 from nums where num_id < (select max(customer_id) from Customers) ) select nums.num_id as ids from nums left join Customers customers on nums.num_id = customers.customer_id where customers.customer_id is null order by ids
249,with recursive t as( select 1 as id union all select id+1 from t where id < (select max(customer_id) from customers) ) select id as ids from t where id not in (select customer_id from customers)
250,with recursive t1 as ( select 1 as c_id union select t1.c_id + 1 from t1 where t1.c_id < (select max(customer_id) from Customers) ) select t1.c_id as ids from t1 where t1.c_id not in (select customer_id from Customers)
251,with recursive cte as (select 1 as id union select id+1 from cte where id < (select max(customer_id) from customers)) select c.id as ids from cte c left join customers cus on c.id = cus.customer_id where cus.customer_name is null
252,WITH RECURSIVE id_seq AS ( SELECT 1 as continued_id UNION SELECT continued_id + 1 FROM id_seq WHERE continued_id < (SELECT MAX(customer_id) FROM Customers) ) SELECT continued_id AS ids FROM id_seq WHERE continued_id NOT IN (SELECT customer_id FROM Customers) 
253,with recursive cte (customer_id) as (select 1 union all select customer_id + 1 from cte where customer_id + 1 <= (select max(customer_id) from customers)) select customer_id as ids from cte where customer_id not in (select customer_id from customers)
254,with RECURSIVE cte(n) AS ( SELECT 1 UNION ALL SELECT n+1 FROM cte WHERE n < 100 ) SELECT n AS ids FROM cte WHERE n NOT IN (SELECT customer_id FROM Customers) AND n < (SELECT MAX(customer_id) From Customers)
